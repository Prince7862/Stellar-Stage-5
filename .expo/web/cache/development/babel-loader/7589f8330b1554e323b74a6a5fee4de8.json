{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/princealijeewani/Desktop/WhiteHat Jr./React Native/StellarStage5/screens/StarMap.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { ImageBackgrounda } from \"react-native-web/dist/index\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { WebView } from 'react-native-webview';\n\nvar StarMapScreen = function (_Component) {\n  _inherits(StarMapScreen, _Component);\n\n  var _super = _createSuper(StarMapScreen);\n\n  function StarMapScreen() {\n    var _this;\n\n    _classCallCheck(this, StarMapScreen);\n\n    _this = _super.call(this);\n    _this.state = {\n      longitude: '',\n      latitude: ''\n    };\n    return _this;\n  }\n\n  _createClass(StarMapScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          longitude = _this$state.longitude,\n          latitude = _this$state.latitude;\n      var path = \"https://virtualsky.lco.global/embed/index.html?longitude=\" + longitude + \"&latitude=\" + latitude + \"&constellations=true&constellationlabels=true&showstarlabels=true&gridlines_az=true&live=true&projection=stereo&showdate=false&showposition=false\";\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          backgroundColor: \"#1a0023\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }\n      }, React.createElement(SafeAreaView, {\n        style: styles.droidSafeArea,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: {\n          flex: 0.3,\n          marginTop: 20,\n          alignItems: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.titleText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }\n      }, \"Star Map\"), React.createElement(TextInput, {\n        style: styles.inputStyle,\n        placeholder: \"Enter your longitude\",\n        placeholderTextColor: \"white\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            longitude: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }\n      }), React.createElement(TextInput, {\n        style: styles.inputStyle,\n        placeholder: \"Enter your latitude\",\n        placeholderTextColor: \"white\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            latitude: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }\n      })), React.createElement(WebView, {\n        scalesPageToFit: true,\n        source: {\n          uri: path\n        },\n        style: {\n          marginTop: 20,\n          marginBottom: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return StarMapScreen;\n}(Component);\n\nexport { StarMapScreen as default };\nvar styles = StyleSheet.create({\n  droidSafeArea: {\n    marginTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0\n  },\n  titleText: {\n    fontSize: 35,\n    fontWeight: \"bold\",\n    color: \"white\",\n    justifyContent: \"center\",\n    alignContent: \"center\"\n  },\n  inputStyle: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    borderRadius: 20,\n    marginTop: 20,\n    marginRight: 20,\n    marginLeft: 20,\n    textAlign: 'center',\n    color: 'white',\n    width: 200\n  }\n});","map":{"version":3,"sources":["/Users/princealijeewani/Desktop/WhiteHat Jr./React Native/StellarStage5/screens/StarMap.js"],"names":["React","Component","ImageBackgrounda","WebView","StarMapScreen","state","longitude","latitude","path","flex","backgroundColor","styles","droidSafeArea","marginTop","alignItems","titleText","inputStyle","text","setState","uri","marginBottom","StyleSheet","create","Platform","OS","StatusBar","currentHeight","fontSize","fontWeight","color","justifyContent","alignContent","height","borderColor","borderWidth","borderRadius","marginRight","marginLeft","textAlign","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Text, View, TextInput, StyleSheet, Platform, StatusBar, SafeAreaView, ImageBackgrounda, ImageBackground } from 'react-native';\nimport { WebView } from 'react-native-webview';\n\nexport default class StarMapScreen extends Component {\n    constructor() {\n        super()\n        this.state = {\n            longitude: '',\n            latitude: ''\n        }\n    }\n    render() {\n        const { longitude, latitude } = this.state;\n        const path = `https://virtualsky.lco.global/embed/index.html?longitude=${longitude}&latitude=${latitude}&constellations=true&constellationlabels=true&showstarlabels=true&gridlines_az=true&live=true&projection=stereo&showdate=false&showposition=false`\n        return (\n            <View style={{ flex: 1, backgroundColor: \"#1a0023\" }}>\n                <SafeAreaView style={styles.droidSafeArea} />\n                <View style={{ flex: 0.3, marginTop: 20, alignItems: 'center' }}>\n                    <Text style={styles.titleText}>Star Map</Text>\n                    <TextInput\n                        style={styles.inputStyle}\n                        placeholder=\"Enter your longitude\"\n                        placeholderTextColor=\"white\"\n                        onChangeText={(text) => {\n                            this.setState({\n                                longitude: text\n                            })\n                        }}\n                    />\n                    <TextInput\n                        style={styles.inputStyle}\n                        placeholder=\"Enter your latitude\"\n                        placeholderTextColor=\"white\"\n                        onChangeText={(text) => {\n                            this.setState({\n                                latitude: text\n                            })\n                        }}\n                    />\n                </View>\n                <WebView\n                    scalesPageToFit={true}\n                    source={{ uri: path }}\n                    style={{ marginTop: 20, marginBottom: 20, }}\n                />\n            </View>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    droidSafeArea: {\n        marginTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0\n    },\n    titleText: {\n        fontSize: 35,\n        fontWeight: \"bold\",\n        color: \"white\",\n        justifyContent: \"center\",\n        alignContent: \"center\",\n    },\n    inputStyle: {\n        height: 40,\n        borderColor: 'gray',\n        borderWidth: 1,\n        borderRadius: 20,\n        marginTop: 20,\n        marginRight: 20,\n        marginLeft: 20,\n        textAlign: 'center',\n        color: 'white',\n        width: 200\n    }\n})"]},"metadata":{},"sourceType":"module"}